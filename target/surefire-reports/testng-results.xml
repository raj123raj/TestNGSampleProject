<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="21" passed="20" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-27T15:09:40 IST" name="Command line suite" finished-at="2022-10-27T15:09:40 IST" duration-ms="73">
    <groups>
    </groups>
    <test started-at="2022-10-27T15:09:40 IST" name="Command line test" finished-at="2022-10-27T15:09:40 IST" duration-ms="73">
      <class name="com.gfg.MultiThreadedIntegrationTest">
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
        <test-method signature="checkForCount()[pri:0, instance:com.gfg.MultiThreadedIntegrationTest@3ce1e309]" started-at="2022-10-27T15:09:40 IST" name="checkForCount" finished-at="2022-10-27T15:09:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForCount -->
      </class> <!-- com.gfg.MultiThreadedIntegrationTest -->
      <class name="com.gfg.DependencyUnitTest">
        <test-method signature="checkForValidMail()[pri:0, instance:com.gfg.DependencyUnitTest@71809907]" started-at="2022-10-27T15:09:40 IST" name="checkForValidMail" finished-at="2022-10-27T15:09:40 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForValidMail -->
        <test-method signature="logInWhenEmailValid()[pri:0, instance:com.gfg.DependencyUnitTest@71809907]" started-at="2022-10-27T15:09:40 IST" name="logInWhenEmailValid" finished-at="2022-10-27T15:09:40 IST" depends-on-methods="com.gfg.DependencyUnitTest.checkForValidMail" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWhenEmailValid -->
      </class> <!-- com.gfg.DependencyUnitTest -->
      <class name="com.gfg.ParametrizedUnitTest">
        <test-method signature="evenNumberCheck(java.lang.Integer, boolean)[pri:0, instance:com.gfg.ParametrizedUnitTest@6aba2b86]" started-at="2022-10-27T15:09:40 IST" name="evenNumberCheck" data-provider="numbers" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumberCheck -->
        <test-method signature="evenNumberCheck(java.lang.Integer, boolean)[pri:0, instance:com.gfg.ParametrizedUnitTest@6aba2b86]" started-at="2022-10-27T15:09:40 IST" name="evenNumberCheck" data-provider="numbers" finished-at="2022-10-27T15:09:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4882]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumberCheck -->
        <test-method signature="evenNumberCheck(java.lang.Integer, boolean)[pri:0, instance:com.gfg.ParametrizedUnitTest@6aba2b86]" started-at="2022-10-27T15:09:40 IST" name="evenNumberCheck" data-provider="numbers" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2222]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumberCheck -->
        <test-method signature="evenNumberObjectCheck(com.gfg.ParametrizedUnitTest$EvenNumberPOJO)[pri:0, instance:com.gfg.ParametrizedUnitTest@6aba2b86]" started-at="2022-10-27T15:09:40 IST" name="evenNumberObjectCheck" data-provider="numbersObject" finished-at="2022-10-27T15:09:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EvenNumber{value=2432, isEven=true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumberObjectCheck -->
        <test-method signature="evenNumberObjectCheck(com.gfg.ParametrizedUnitTest$EvenNumberPOJO)[pri:0, instance:com.gfg.ParametrizedUnitTest@6aba2b86]" started-at="2022-10-27T15:09:40 IST" name="evenNumberObjectCheck" data-provider="numbersObject" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EvenNumber{value=111, isEven=false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumberObjectCheck -->
        <test-method signature="evenNumberObjectCheck(com.gfg.ParametrizedUnitTest$EvenNumberPOJO)[pri:0, instance:com.gfg.ParametrizedUnitTest@6aba2b86]" started-at="2022-10-27T15:09:40 IST" name="evenNumberObjectCheck" data-provider="numbersObject" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EvenNumber{value=4712, isEven=true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumberObjectCheck -->
      </class> <!-- com.gfg.ParametrizedUnitTest -->
      <class name="com.gfg.PriorityUnitTest">
        <test-method signature="stringToIntCheck()[pri:1, instance:com.gfg.PriorityUnitTest@158da8e]" started-at="2022-10-27T15:09:40 IST" name="stringToIntCheck" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringToIntCheck -->
        <test-method signature="intToStringCheck()[pri:2, instance:com.gfg.PriorityUnitTest@158da8e]" started-at="2022-10-27T15:09:40 IST" name="intToStringCheck" finished-at="2022-10-27T15:09:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intToStringCheck -->
      </class> <!-- com.gfg.PriorityUnitTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
